7 Procedure di sviluppo
In questa sezione verranno descritte le procedure che tutti i componenti del gruppo sono tenuti a seguire
per ottenere un risultato soddisfacente degli obiettivi stabiliti dal Piano di qualifica v1.0.0

7.1 Gestione di progetto
Il Project Manager ha la responsabilità di gestire l'intero progetto. Dovrà utilizzare gli
strumenti in suo possesso per:
-Coordinare e pianificare le attività;
-Coordinare e gestire le risorse umane;
-Analizzare i rischi;
-Elaborare e monitorare i dati d'avanzamento;

7.1.1 Pianificazione delle attività:
Per ogni periodo di lavoro il Project Manager deve stabilire le seguenti attività:
-Creare un calendario lavorativo;
-Inserire le attività da svolgere;
-Inserire eventuali dipendenze delle attività;
-Inserire le milestone (G a pedice) indicante il termine previsto delle attività;
-Assegnare ad ogni attività le risorse necessarie;

7.1.2 Coordinamento delle attività
Una volta pianificate le attività, il Project Manager le assegna ad ognuno dei membri atrraverso
l'ausilio offerto da Asana (G a pedice). Ogni componente può quindi verificare quali attività 
gli sono state assegnate e modificarne lo stato, facendo in modo che il Project Manager possa 
seguire con facilità i progressi effettuati.

7.1.3 Analisi dei rischi
Durante tutto l'avanzamento del progetto il Project Manager ha il compito di valutare eventuali
rischi che possono venirsi a creare e che sono descritti nel Piano di Progetto v0.0.1 attuando 
le adeguate contromisure descritte.

7.1.4 Elaborazione dei dati
Il Project Manager dovrà creare eventuali grafici esplicativi dell'andamento del progetto, e 
riportarli nel Piano di Progetto v0.0.01.

7.2 Verifica
In questa sezione verranno descritte le tecniche e le strategie che dovranno utilizzare i Verificatori
durante il loro lavoro, in modo da uniformare le attività ed ottenre il miglior risultato possibile

7.2.1 Tecniche di analisi
I Verificatori dovranno utilizzare le seguenti tecniche per svolgere al meglio il proprio compito:
-Walkthrough (G a pedice): consiste in una lettura del documento/codice cercando errori ed
 anomalie a largo spettro senza un'idea precisa del tipo di errori che si potranno trovare. 
 Ogni errore verrà discusso con gli autori per evitare incompresioni e per valutare insieme
 le modifiche da apportare. Il walkthrough (G a pedice) è necessario nelle prime fasi dello sviluppo, quando 
 ancora non è del tutto chiaro quali siano gli errori possibili. Utilizzando questa tecnica più
 volte è possibile scrivere una lista degli errori più comuni.
-Inspection: l'inspection si basa sulla lettura mirata del documento/codice. Questa fase
 è facilitata dall'utilizzo della lista stilata durante la fase di walkthrough. In questo modo 
 si cercano gli errori maggiormente fatti. Con l'acquisizione di esperienza la lista di controllo 
 verrà estesa, rendendo questa fase sempre più efficace.
-Analisi dinamica: questa analisi si applica solo al prodotto software e viene svolta 
 durante l'esecuzione del codice. Per questo tipo di analisi vengono utilizzati degli appositi test 
 per verificare il funzionamento e rilevare possibili erori d'implementazione.
 Questi test devono essere utili e ripetibili. Sono definiti 
 ripetibili quando uno stesso test, con gli stessi dati in input, sullo stesso hardware e 
 con lo stesso software, produce lo stesso risultato.
-Test di unità: questo test verifica che ogni singola unità di software funzioni correttamente.
 Con questo test si verifica la correttezza di tutti i moduli base che compongono il 
 software, limitando così gli errori d'implementazione.
-Test di integrazione: questo test verifica che due moduli testati durante il test precedente,
 funzioni anche quando vengono assemblati insieme. E' possibile in questo modo scovare
 degli errori che precedentemente erano sfuggiti. 
-Test di sistema: consiste nella validazione dei prodotti software. Viene eseguito soltanto 
 quando si raggiunge una versione che può essere definitiva. Viene quindi verificata
 la copertura completa dei requisiti da parte del prodotto.
-Test di regressione: viene eseguito immediatamente dopo che una componente è stata 
 modificata. Di fatto consiste nel eseguire nuovamente tutti i test precedenti per vrificare 
 che le modifiche permettano ancora ai moduli di funzionare nel modo previsto. 
-Test di accettazione: coincide con il collaudo del software in presenza del proponente. 
 Se questo test ha esito positivo, il prodotto sarà considerato abbastanza maturo da 
 permettere il rilascio.
 
7.2.2 Lista di controllo
Durante la fase di walkthrough sono stati rilevati questi come errori più frequenti:
-Norme stilistiche:
	-Un elemento dell'elenco inzia con lettera minuscola;
	-
	-
	-
-Italiano:
	-Scorretto utilizzo di accenti acuti e gravi;
	-
	-
-Latex:
	-
-Tracciamento requisiti:
	-Ad ogni caso deve corrispondere almeno un elemento;
	-
-UML:
	-Direzione delle frecce dei diagrammi errate;
	-

7.2.3 Verifica documenti
Il Verificatore nei documenti dovrà verificare:
-Controllare nel diario delle modifiche i cambiamenti avvenuti dall'ultima volta;
-Cercare eventuali errori nelle parti che sono state modificate del documento;
-Fare un resoconto degli errori riscontarti, in modo che il Project Manager possa
 creare un ticket per la correzione;
-Aggiornare il registro delle modifiche e la versione del documento.

7.2.4 Verifica requisiti
Il verificatore, nel controllare i requisiti dovrà porre la propria attenzione su:
-Correttezza ortografica e lessicale del testo;
-Atomicità dei requisiti foglia.

7.2.5 Verifica diagrammi UML
Nel controllare i diagrammi UML(G a pedice), il Verificatore dovrà prestare attenzione a questi elementi:
-Correttezza ortografica e lessicale del testo;
-Correttezza del formalismo grafico utilizzato;
-Correttezza logica del programma.